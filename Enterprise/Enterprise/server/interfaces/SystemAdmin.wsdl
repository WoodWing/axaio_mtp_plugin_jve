<?xml version="1.0"?>
<!-- Confidential, Copyright WoodWing Software BV, all rights reserved -->
<!-- Enterprise Server - System Administration WSDL -->

<wsdl:definitions
	targetNamespace="urn:SmartConnectionSysAdmin" 
	xmlns:tns="urn:SmartConnectionSysAdmin" 
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
	xmlns:soap-enc="http://schemas.xmlsoap.org/soap/encoding/">
		
	
	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>> TYPES  <<<<<<<<<<<<<<<<<<<<<<<<<<< -->

	<wsdl:types xmlns="http://schemas.xmlsoap.org/wsdl/">
		<xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:SmartConnectionSysAdmin">

			<xsd:complexType name="SubApplication">
				<xsd:all>
					<xsd:element name="ID"            type="xsd:string"/>  <!-- Sub app ID. Format: "<ServerPlugin>_<SubAppId>" -->
					<xsd:element name="Version"       type="xsd:string"/>  <!-- Sub app version. Format: "<major>.<minor>.<patch> Build <nr>" -->
					<xsd:element name="PackageUrl"    type="xsd:string"/>  <!-- URL to be used by client app to download the sub app. -->
					<xsd:element name="DisplayName"   type="xsd:string"/>  <!-- Sub application name to show in UI. -->
					<xsd:element name="ClientAppName" type="xsd:string"/>  <!-- Client app for which the sub app is registered. -->
				</xsd:all>
			</xsd:complexType>
			<xsd:complexType name="ArrayOfSubApplication">
				<complexContent>
					<restriction base="soap-enc:Array">
						<attribute ref="soap-enc:arrayType" wsdl:arrayType="tns:SubApplication[]"/>
					</restriction>
				</complexContent>
			</xsd:complexType>

			<!-- 
				Retrieves sub applications that are registered for a given client application. 

				After the logon Content Station calls the GetSubApplications service. 
				This service returns a list of sub applications. Per sub application there 
				is an ID, version and package URL. By default the service returns an empty list.
				Server plug-ins can implement the service in order to add a sub application. 
				Each server plug-in must use its own unique ID. The files of the sub application 
				are zipped in a package. The zip also contains an applicationDescriptor.xml, 
				to describe the sub application. The applicationDescriptor also contains the 
				version of the sub application.
				
				Scenario for a new installation:
				- Content Station calls the GetSubApplicactions service.
				- Content Station detects that the sub application is not installed locally.
				- Content Station downloads and installs the package.
				
				Upgrade scenario:
				- Content Station calls the GetSubApplicactions service.
				- Content Station detects the local applicationDescriptor file and compares the version numbers.
				- When the version return by service is newer, Content Station downloads and installs the package.
				
				Before introduction of this service the sub applications were already configured 
				in the WWSettings.xml file of Content Station. This is left untouched for 
				backwards compatibility. It is not needed to configure Sub applications in 
				the WWSettings.xml file when provided by the server. All additional settings 
				(such as home tab icon, tab icon, allow multiple instances) are moved to the
				applicationDescriptor file. 

				Whether or not the current user has access to a certain sub app can be found out
				through the LogOnResponse (see SCEnterprise.wsdl). The sub app ID corresponds
				with the AppFeature->Name element in the following path:
					LogOnResponse->FeatureProfiles[]->Features[]->Name
				When GetSubApplicationsResponse returns a certain sub app which can -not- be 
				found in the LogOnResponse, it means that the current user has access (because
				the default Value is Yes). And so when found, the user has no access, in case
				a structure like this will be found:
					<Features>
						...
						<AppFeature>
							<Name>FooClient_FooSubApp</Name>
							<Value>No</Value>
						</AppFeature>
						...
					</Features>
			-->
			<xsd:element name="GetSubApplicationsRequest">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Ticket" type="xsd:string"/> <!-- Session ticket. -->
						<xsd:element name="ClientAppName" type="xsd:string" nillable="true"/> <!-- Client application. NULL to retrieve all. Leave empty to use ClientAppName from the LogOn request. -->
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="GetSubApplicationsResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="SubApplications" type="tns:ArrayOfSubApplication"/> <!-- List of sub applications. -->
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			
		</xsd:schema>
	</wsdl:types>


	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>> MESSAGES  <<<<<<<<<<<<<<<<<<<<<<<<<< -->
		
	<wsdl:message name="GetSubApplicationsRequest">
		<wsdl:part name="parameters" element="tns:GetSubApplicationsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSubApplicationsResponse">
		<wsdl:part name="parameters" element="tns:GetSubApplicationsResponse"/>
	</wsdl:message>

	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>> OPERATIONS  <<<<<<<<<<<<<<<<<<<<<<<< -->

	<wsdl:portType name="SmartConnectionSysAdminPort">

		<wsdl:operation name="GetSubApplications">
			<wsdl:input message="tns:GetSubApplicationsRequest"/>
			<wsdl:output message="tns:GetSubApplicationsResponse"/>
		</wsdl:operation>

	</wsdl:portType>

	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>> BINDINGS  <<<<<<<<<<<<<<<<<<<<<<<<<< -->	

	<wsdl:binding name="SmartConnectionSysAdminBinding" type="tns:SmartConnectionSysAdminPort">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>

		<wsdl:operation name="GetSubApplications">
			<soap:operation soapAction="urn:SmartConnectionSysAdmin#GetSubApplications"/>
			<wsdl:input>  <soap:body use="literal"/> </wsdl:input>
			<wsdl:output> <soap:body use="literal"/> </wsdl:output>
		</wsdl:operation>

	</wsdl:binding>

	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>> SERVICE  <<<<<<<<<<<<<<<<<<<<<<<<<< -->

	<wsdl:service name="SmartConnectionSysAdminService">
		<wsdl:documentation>Enterprise Server system administration service</wsdl:documentation>
		<wsdl:port name="SmartConnectionSysAdminPort" binding="tns:SmartConnectionSysAdminBinding">
			<soap:address location="http://127.0.0.1/SCEnterprise/sysadminindex.php" />
		</wsdl:port>
	</wsdl:service>

</wsdl:definitions>
