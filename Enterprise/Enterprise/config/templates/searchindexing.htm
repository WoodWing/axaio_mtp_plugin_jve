<!--
	See /server/admin/searchindexing.php header for a description of this application.
-->
<link rel="stylesheet" href="<!--INETROOT-->/config/jquery-ui/jquery-ui-1.8.24.custom.css" type="text/css" media="all" />

<style>
	.ui-progressbar-value { background-image: url("<!--INETROOT-->/config/images/progressBarFull.png"); }
</style>

<script language="javascript" type="text/javascript" src="<!--INETROOT-->/server/utils/javascript/XPath.js" ></script>
<script language="javascript" type="text/javascript" src="<!--INETROOT-->/server/utils/javascript/WWAjax.js" ></script>

<script language="javascript" type="text/javascript">
<!--
	// init globals
	var gAutoTimer = null;
	var gIndexMode = ''; // indexing ('IndexStep') or unindexing ('UnindexStep') or optimizing ('OptimizeIndexes')
	var gLastObjId = 0; // the last object id of the last iteration step
	var gLastDeletedObjId = 0; //the last deletedObject id of the last iteration step
	var gProIdx = 0; // Progress (total minus done)
	var gTodoDelObjects	= 0 // Number of deleted objects to be indexed
	
	// init progress bar
	$(function() {
		$("#idxProgressBar").progressbar({ value: 0 });
		$("#optProgressBar").progressbar({ value: 0 });
	});
		
	/**
	 * Requests server to run the next step of the indexing procedure.
	 */
	function indexStep()
	{
		if( gAutoTimer != null ) {
			spinningBall( true, "idx_spinningBall" ); // show spinning ball
			var serverUrl = "../../server/admin/searchindexing.php";
			//serverUrl += "?start_debug=1"; // Zend Debugger (do not combine with server side debugging!)
			WWAjax.doHttpRequest( serverUrl, "callbackOnServerResponse", "text/xml", true, "command="+gIndexMode+"&lastObjId="+gLastObjId+"&lastDeletedObjId="+gLastDeletedObjId+"&progress="+gProIdx+"&failedCount="+gFailedCount+"&todoDelObjects="+gTodoDelObjects, true );
		}
	}

	/**
	 * Requests server to return initial progress state.
	 */
	function initPage()
	{
		document.getElementById('idx_errorReport').innerHTML = '';
		gIndexMode = 'InitPage';
		//document.getElementById('idx_stopBtn').disabled = true;
		var serverUrl = "../../server/admin/searchindexing.php";
		//serverUrl += "?start_debug=1"; // Zend Debugger (do not combine with server side debugging!)
		WWAjax.doHttpRequest( serverUrl, "callbackOnServerResponse", "text/xml", true, "command=InitPage", true );
	}

	/**
	 * Requests Enterprise Server to optimize the indexes for all integrated Search Servers.
	 */
	function optimizeIndexes()
	{
		spinningBall( true, "opt_spinningBall" ); // show spinning ball
		var serverUrl = "../../server/admin/searchindexing.php";
		//serverUrl += "?start_debug=1"; // Zend Debugger (do not combine with server side debugging!)
		WWAjax.doHttpRequest( serverUrl, "callbackOnServerResponse", "text/xml", true, "command=OptimizeIndexes", true );
	}

	/**
	 * Called back by WWAjax when server responds on startIndex / indexStep function call.
	 * This updates the progress bar with results returned from server.
	 */
	function callbackOnServerResponse( xmlResult, httpStatus )
	{
		// stop indexing on when user did abort/reload page
		if( httpStatus == 0 ) {
			processingStopped();
			return;
		}

		// show HTML page when redirected, such as the logon page!
		if( httpStatus == 200 && !xmlResult.documentElement ) {
			document.write( xmlResult );
			return;
		}
		
		// stop indexing on error and show message
		if( !xmlResult.documentElement ) {
			alert( 'Fatal Error!\nHTTP Status: ' + httpStatus + '\nInvalid XML response:\n' + xmlResult );
			processingStopped(); // break out when communication fails (avoid many errors)
			return;
		}
		if( httpStatus != 200 ) {
			alert( 'Fatal Error!\nHTTP Status: ' + httpStatus + '\nXML response:\n' + xmlResult );
			processingStopped(); // break out when communication fails (avoid many errors)
			return;
		}
		
		// parse error response from server and display at screen
		testResultNodes = XPath.selectNodes( "//ProgressResponse/Error", xmlResult );
		if( testResultNodes.length > 0 ) { 
			var errMsg = XPath.selectNodeExtended( "Message/text()", testResultNodes[0] );
			switch( gIndexMode ) {
				case 'InitPage':        errRepId = 'app_errorReport'; break;
				case 'IndexStep':       errRepId = 'idx_errorReport'; break;
				case 'UnindexStep':     errRepId = 'idx_errorReport'; break;
				case 'OptimizeIndexes': errRepId = 'opt_errorReport'; break;
			}
			document.getElementById(errRepId).innerHTML += '<font color="red">ERROR: <'+'/font>' + errMsg + '<br/>';
			// continue!
		}

		// parse installed server plugin info (from server) and display at screen => only set for the InitPage command
		svrResultNodes = XPath.selectNodes( "//ProgressResponse/InstalledSearchServerPlugins/Plugin", xmlResult );
		if( svrResultNodes.length > 0 ) { 
			var pluginNames = '<ul>';
			for( j=0; j<svrResultNodes.length; j++ ) {
				pluginNames += '<li style="display:list-item; list-style-type:disc;">' +
					XPath.selectNodeExtended( "DisplayName/text()", svrResultNodes[j] ) + '<'+'/li>';
			}
			pluginNames += '<'+'/ul>';
			document.getElementById('installedServers').innerHTML = pluginNames;
		}

		// parse progress response from server
		idxResultNodes = XPath.selectNodes( "//ProgressResponse/IndexProgressBar", xmlResult );
		optResultNodes = XPath.selectNodes( "//ProgressResponse/OptimizeProgressBar", xmlResult );
		if( idxResultNodes.length == 0 || optResultNodes.length == 0 ) { // no results implies test crashed or something
			alert( 'Fatal Error!' );
			processingStopped();
			return;
		}
        gFailedCount = XPath.selectNodeExtended( "FailedCount/text()", idxResultNodes[0] );
		gLastObjId = XPath.selectNodeExtended( "LastObjId/text()", idxResultNodes[0] );
		gLastDeletedObjId = XPath.selectNodeExtended( "LastDeletedObjId/text()", idxResultNodes[0] );
		gTodoDelObjects = XPath.selectNodeExtended( "TodoDelObjects/text()", idxResultNodes[0] );
		
		// update the process bars
		var max = XPath.selectNodeExtended( "Maximum/text()", idxResultNodes[0] );
		var pro = XPath.selectNodeExtended( "Progress/text()", idxResultNodes[0] );
		gProIdx = pro;
		var runCompleted = XPath.selectNodeExtended( "RunCompleted/text()", idxResultNodes[0] );
		// jQuery progressBar
		var idxProgressPercentage = ((pro-gFailedCount) / max) * 100;
		$("#idxProgressBar").progressbar( "option", "value", idxProgressPercentage );
		$("#idxProgressLabel").text( idxProgressPercentage.toFixed(0) + '%' );

		document.getElementById('indexedObjCount').innerHTML = pro-gFailedCount;
		document.getElementById('idx_storedObjCount').innerHTML = max;

		max = XPath.selectNodeExtended( "Maximum/text()", optResultNodes[0] );
		pro = XPath.selectNodeExtended( "Progress/text()", optResultNodes[0] );
		var lastOpt = XPath.selectNodeExtended( "LastOptimized/text()", optResultNodes[0] );
		if( lastOpt == '' ) lastOpt = '-';
		// jQuery progressBar
		var optProgressPercentage = (pro / max) * 100;
		$("#optProgressBar").progressbar( "option", "value", optProgressPercentage );
		$("#optProgressLabel").text( optProgressPercentage.toFixed(0) + '%' );
		
		document.getElementById('lastOptimized').innerHTML = lastOpt;
		document.getElementById('optimizedObjCount').innerHTML = pro;
		document.getElementById('opt_storedObjCount').innerHTML = max;

		// When end of indexing process reached, we stop, else continue
		if( runCompleted == 'true' ) {
			processingStopped();
            if( gFailedCount > 0 ) { // Only show the error text box when there's error.
                $("#wid_errorReport").show();
            } else {
                $("#wid_errorReport").hide();
            }
		} else {
			// only start new timer when not stopped by user in the meantime
			if( gAutoTimer != null ) {
				gAutoTimer = setTimeout( "indexStep()", 1 );
			} else {
				processingStopped();
			}
		}
	}
	
	/**
	 * Shows/hides the spinning ball icon
	 */
	function spinningBall( show, spinningBallId )
	{
		var spinningBall = document.getElementById( spinningBallId ); 
		if( show ) {
			spinningBall.innerHTML = '<img src="../../config/images/wwloader.gif">';
		} else {
			spinningBall.innerHTML = '';
		}
	}

	/**
	 * Start indexing process of Enterpise objects at Search Server (such as Solr)
	 */
	function startIndex()
	{
		gLastObjId = 0;
		gLastDeletedObjId = 0;
		document.getElementById('idx_errorReport').innerHTML = '';
		gIndexMode = 'IndexStep';
		if( gAutoTimer == null ) {
		
			// toggle visual state of all buttons
			grayButtons();
			document.getElementById('idx_stopBtn').disabled = false;
			
			// init global timer to start processing
			gAutoTimer = setTimeout( "indexStep()", 1 );
		}
	}

	/**
	 * Start unindexing process of Enterpise objects at Search Server (such as Solr)
	 */
	function startUnindex()
	{
		gLastObjId = 0;
		gLastDeletedObjId = 0;
		document.getElementById('idx_errorReport').innerHTML = '';
		gIndexMode = 'UnindexStep';
		if( gAutoTimer == null ) {
		
			// toggle visual state of all buttons
			grayButtons();
			document.getElementById('idx_stopBtn').disabled = false;
			
			// init global timer to start processing
			gAutoTimer = setTimeout( "indexStep()", 1 );
		}
	}

	/**
	 * Start optimizing process of Enterpise objects at Search Server (such as Solr)
	 */
	function startOptimize()
	{
		gIndexMode = 'OptimizeIndexes';
		document.getElementById('opt_errorReport').innerHTML = '';

		// toggle visual state of all buttons
		grayButtons();
		//document.getElementById('opt_stopBtn').disabled = false;
		
		// init global timer to start processing
		optimizeIndexes();
	}

	/**
	 * Called back from server when indexing process has actually stopped
	 */
	function processingStopped()
	{
		initButtons(); // toggle visual state of all buttons
		
		// hide spinning ball
		if( gIndexMode == 'OptimizeIndexes' ) {
			spinningBall( false, "opt_spinningBall" ); 
		} else {
			spinningBall( false, "idx_spinningBall" );
		}

		// klll global timer to stop processing
		if( gAutoTimer != null ) {
			clearTimeout( gAutoTimer ); // stop auto-save interval
			gAutoTimer = null;
		}
	}
	
	/**
	 * Aborts indexing process that was started with startIndex function
	 */
	function stopProcessing()
	{
		document.getElementById('idx_stopBtn').disabled = true;
		
		// klll global timer to stop processing
		if( gAutoTimer != null ) {
			clearTimeout( gAutoTimer ); // stop auto-save interval
			gAutoTimer = null;
		}
	}

	/**
	 * Sets initial enabled/disabled state for all buttons. Typically when ready.
	 */
	function initButtons()
	{
		document.getElementById('idx_startBtn').disabled = false;
		document.getElementById('idx_stopBtn').disabled = true;
		document.getElementById('idx_clearBtn').disabled = false;
		document.getElementById('opt_startBtn').disabled = false;
		//document.getElementById('opt_stopBtn').disabled = true;
	}

	/**
	 * Disables all buttons. Typically when busy / processing.
	 */
	function grayButtons()
	{
		document.getElementById('idx_startBtn').disabled = true;
		document.getElementById('idx_stopBtn').disabled = true;
		document.getElementById('idx_clearBtn').disabled = true;
		document.getElementById('opt_startBtn').disabled = true;
		//document.getElementById('opt_stopBtn').disabled = true;
	}
-->
</script>

<table class="appframe"><tr class="text"><td>

	<!-- TODO: localize this entire GUI -->

	<!-- app header -->
	<table class="apptitlebar">
		<tr>
			<td><img class="apptitleicon" src="../../config/images/searchsvr_32.gif"/></td>
			<td>&nbsp;<span class="apptitletext"><!--RES:ACT_SEARCH_SERVER--></span></td>
		</tr>
	</table>

	<!-- app body -->
	<table class="listframe"><tr><td>
		<table class="listpane">
			<tr>
				<td><!--RES:INSTALLED_SEARCH_SERVERS--><br/><span id="installedServers"></span><span id="app_errorReport"></span></td>
			</tr>
		</table>
	</td></tr></table>
	<br/>
	<br/>

	<!-- indexing header -->
	<table class="apptitlebar">
		<tr>
			<td><img class="apptitleicon" src="../../config/images/searchsvr_index_24.gif"/></td>
			<td>&nbsp;<span class="apptitletext"><!--RES:INDEXING--></span></td>
		</tr>
	</table>

	<!-- indexing body -->
	<table class="listframe"><tr><td>
		<table class="listpane">
			<tr>
				<td align="left"><!--RES:INDEXED_OBJECTS--> <span id="indexedObjCount"></span></td>
				<td align="right"><!--RES:STORED_OBJECTS--> <span id="idx_storedObjCount"></span></td>
				<td/>
				<td/>
			</tr>
			<tr>
				<td colspan="2" width=400px height="30px"><div style="width:400px" id="idxProgressBar"></div></td>
				<td height="30px" width="30px" align="left"><span id="idxProgressLabel"></span></td>
				<td><span id="idx_spinningBall"></span></td>
			</tr>
			<tr>
				<td colspan="4">
					<input type="button" name="idx_startBtn" id="idx_startBtn" value="<!--RES:ACT_START-->" onclick="startIndex();" />&nbsp;
					<input type="button" name="idx_stopBtn" id="idx_stopBtn" value="<!--RES:ACT_STOP-->" onclick="stopProcessing();" />&nbsp; 
					<input type="button" name="idx_clearBtn" id="idx_clearBtn" value="<!--RES:ACT_CLEAR-->" onclick="startUnindex();" />&nbsp;
				</td>
			</tr>
			<tr id="wid_errorReport" style="display: none">
				<td colspan="4" align="left" width=400px>
					Error(s) reported by Solr during indexing:
					<div id="idx_errorReport" style="height:120px;width:400px;overflow:auto;"></div>
				</td>
			</tr>
		</table>
	</td></tr></table>
	<br/>
	<br/>
	<br/>

	<!-- optimizing header -->
	<table class="apptitlebar">
		<tr>
			<td><img class="apptitleicon" src="../../config/images/searchsvr_optimize_24.gif"/></td>
			<td>&nbsp;<span class="apptitletext"><!--RES:OPTIMIZING--></span></td>
		</tr>
	</table>

	<!-- optimizing body -->
	<table class="listframe"><tr><td>
		<table class="listpane">
			<tr>
				<td align="left"><!--RES:OPTIMIZED_OBJECTS--> <span id="optimizedObjCount"></span></td>
				<td align="right"><!--RES:STORED_OBJECTS--> <span id="opt_storedObjCount"></span></td>    
				<td/>
				<td/>
			</tr>
			<tr>
				<td colspan="2" height="30px"><div style="width:400px" id="optProgressBar"></div></td>				
				<td height="30px" width="30px" align="right"><span id="optProgressLabel"></span></td>
				<td><span id="opt_spinningBall"></span></td>	
			</tr>
			<tr>
				<td colspan="4" align="left"><span id="opt_errorReport"></span></td>
			</tr>
			<tr>
				<td>
					<input type="button" name="opt_startBtn" id="opt_startBtn" value="<!--RES:ACT_START-->" onclick="startOptimize();" />&nbsp; 
				</td>
				<td align="right"><!--RES:LAST_OPTIMIZED--> <span id="lastOptimized"></span></td>
				<td/>
				<td/>
			</tr>
		</table>
	</td></tr></table>

</td></tr></table>

<script language="javascript" type="text/javascript">
<!--
	// late initializers
	spinningBall( true, "idx_spinningBall" ); // show spinning ball
	setTimeout( "initPage()", 50 );
-->
</script>
